# Generated by Django 3.1 on 2021-02-19 16:29

import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('Aerodrome', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Aerodrome_Entity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Feature_Name', models.CharField(max_length=500)),
                ('geom', django.contrib.gis.db.models.fields.GeometryCollectionField(srid=4326)),
                ('Entity_Condition', models.CharField(max_length=100)),
                ('Survey_Date', models.DateTimeField()),
                ('Description', models.TextField()),
                ('Aerodrome', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='Aerodrome_Entity', to='Aerodrome.aerodrome')),
            ],
            options={
                'ordering': ['Feature_Name'],
            },
        ),
        migrations.CreateModel(
            name='Aerodrome_Part',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(max_length=200)),
                ('geom', django.contrib.gis.db.models.fields.PolygonField(srid=4326)),
            ],
        ),
        migrations.CreateModel(
            name='Pavement_Construction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Pavement_Name', models.CharField(max_length=100)),
                ('Width', models.FloatField()),
                ('Shoulder_Width', models.FloatField()),
                ('Pavement_Design_Type', models.CharField(choices=[('f', 'Flexible Design'), ('r', 'Rigid Pavement')], max_length=1)),
                ('Subgrade_Density', models.FloatField()),
                ('Subgrade_Soil_Classification', models.CharField(max_length=100)),
                ('Soil_Shear_Strength', models.FloatField()),
                ('Soil_DCP_Test_Result', models.FloatField()),
                ('Soil_CPT_Test_Result', models.FloatField()),
                ('Soil_Percolation_Rate', models.FloatField()),
                ('SubBase_Material', models.CharField(max_length=100)),
                ('SubBase_Thickness', models.FloatField()),
                ('Joint_Spacing', models.FloatField()),
                ('SubBase_Base_Seperation_Material', models.CharField(max_length=100)),
                ('Base_Material', models.CharField(max_length=100)),
                ('Base_Thickness', models.CharField(max_length=100)),
                ('Concrete_Compressive_Strength', models.FloatField()),
                ('Asphalt_Thickness', models.FloatField()),
                ('Binder_Thickness', models.FloatField()),
                ('Wearing_Thickness', models.FloatField()),
                ('Drainage_Longitudinal_Slope', models.FloatField()),
                ('Drainage_Cross_Slope', models.FloatField()),
                ('Pavement_geom', django.contrib.gis.db.models.fields.PolygonField(srid=4326)),
                ('Aerodrome_Entity', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='Aerodrome_features.aerodrome_entity')),
            ],
            options={
                'ordering': ['Pavement_Name'],
            },
        ),
        migrations.CreateModel(
            name='Aerodrome_Utility_Water_Line',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Line_Size', models.FloatField()),
                ('Remark', models.TextField()),
                ('Line_geom', django.contrib.gis.db.models.fields.LineStringField(srid=4326)),
                ('Aerodrome_Entity', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='Aerodrome_features.aerodrome_entity')),
            ],
        ),
        migrations.CreateModel(
            name='Aerodrome_Utility_Sewage_Line',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Line_Size', models.FloatField()),
                ('Remark', models.TextField()),
                ('Line_geom', django.contrib.gis.db.models.fields.LineStringField(srid=4326)),
                ('Aerodrome_Entity', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='Aerodrome_features.aerodrome_entity')),
            ],
        ),
        migrations.CreateModel(
            name='Aerodrome_Utility_Pole',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Tension_Type', models.CharField(choices=[('H', 'High Tension'), ('L', 'Low Tension'), ('B', 'High/Low Tension')], max_length=1)),
                ('Cable_Size', models.FloatField()),
                ('Pole_Type', models.CharField(max_length=100)),
                ('Status', models.CharField(max_length=100)),
                ('Remark', models.TextField()),
                ('Pole_geom', django.contrib.gis.db.models.fields.PointField(srid=4326)),
                ('Aerodrome_Entity', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='Aerodrome_features.aerodrome_entity')),
            ],
        ),
        migrations.CreateModel(
            name='Aerodrome_Utility_Gas_Line',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Line_Size', models.FloatField()),
                ('Remark', models.TextField()),
                ('Line_geom', django.contrib.gis.db.models.fields.LineStringField(srid=4326)),
                ('Aerodrome_Entity', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='Aerodrome_features.aerodrome_entity')),
            ],
        ),
        migrations.CreateModel(
            name='Aerodrome_Utility_Electric_Cable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Cable_Size', models.FloatField()),
                ('Remark', models.TextField()),
                ('Cable_geom', django.contrib.gis.db.models.fields.LineStringField(srid=4326)),
                ('Aerodrome_Entity', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='Aerodrome_features.aerodrome_entity')),
            ],
        ),
        migrations.CreateModel(
            name='Aerodrome_Entity_Image',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(max_length=200)),
                ('Image', models.ImageField(upload_to='')),
                ('Aerodrome_Entity', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='Aerodrome_features.aerodrome_entity')),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.AddField(
            model_name='aerodrome_entity',
            name='Aerodrome_Part_ID',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='Aerodrome_features.aerodrome_part'),
        ),
    ]
